provisionerId: "{{ TASK_PROVISIONER_ID }}"
workerType: "{{ TASK_WORKER_TYPE }}"
dependencies: [ "{{ TASK_ID }}", "{{ TRAINING_TASK_ID }}" ]
taskGroupId: "{{ TASK_GROUP_ID }}"
schedulerId: "{{ TASK_SCHEDULER_ID }}"
created: "{{ TASK_CREATED }}"
deadline: "{{ TASK_DEADLINE }}"
expires: "{{ TASK_EXPIRES }}"
payload:
  maxRunTime: 1800
  image: "ubuntu:14.04"
  env:
    DEEPSPEECH_ARTIFACTS_ROOT: https://queue.taskcluster.net/v1/task/{{ TASK_ID }}/runs/0/artifacts/public
    DEEPSPEECH_MODEL: https://queue.taskcluster.net/v1/task/{{ TRAINING_TASK_ID }}/runs/0/artifacts/public/output_graph.pb
  command:
    - "/bin/bash"
    - "--login"
    - "-cxe"
    - apt-get -qq update && apt-get -qq -y install git pixz &&
      apt-get -qq -y install make build-essential libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev xz-utils tk-dev &&
      {{ SYSTEM_ADD_USER }} &&
      echo -e "#!/bin/bash\nset -xe\nenv && id && mkdir ~/DeepSpeech/ && git clone --quiet {{ GITHUB_HEAD_REPO_URL }} ~/DeepSpeech/ds/ && cd ~/DeepSpeech/ds && git checkout --quiet {{ GITHUB_HEAD_SHA }}" > /tmp/clone.sh && chmod +x /tmp/clone.sh &&
      {{ SYSTEM_DO_CLONE }} &&
      sudo -H -u build-user {{ TASK_ENV_VARS }} /bin/bash /home/build-user/DeepSpeech/ds/tc-python-tests.sh {{ PYVER }}
  artifacts:
    "public":
      type: "directory"
      path: "/tmp/artifacts/"
      expires: "{{ ARTIFACTS_EXPIRES }}"
# Each task also requires explicit metadata
metadata:
  name: "DeepSpeech Python {{ PYVER }} bindings tests"
  description: "Testing the DeepSpeech python bindings on Python v{{ PYVER }}"
  owner: "{{ EVENT_HEAD_USER_EMAIL }}"
  source: "{{ EVENT_HEAD_REPO_URL }}"
